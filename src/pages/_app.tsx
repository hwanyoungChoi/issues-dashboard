import {
  HydrationBoundary,
  QueryClientProvider,
  QueryErrorResetBoundary,
} from "@tanstack/react-query";
import Head from "next/head";
import "@/styles/globals.css";
import { useRouter } from "next/router";
import { ErrorBoundary } from "react-error-boundary";

import ErrorFallback from "@/components/common/ErrorFallback";
import DashboardLayout from "@/components/layouts/DashboardLayout";
import ModalContainer from "@/components/modals/ModalContainer";
import queryClient from "@/lib/api/queryClient";

import type { AppProps } from "next/app";

export default function App({ Component, pageProps }: AppProps) {
  const router = useRouter();

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <QueryClientProvider client={queryClient}>
        <HydrationBoundary state={pageProps.dehydratedState}>
          <DashboardLayout>
            <QueryErrorResetBoundary>
              {({ reset }) => (
                <ErrorBoundary
                  onReset={reset}
                  resetKeys={[router.asPath]}
                  FallbackComponent={ErrorFallback}
                >
                  <Component {...pageProps} />
                </ErrorBoundary>
              )}
            </QueryErrorResetBoundary>
          </DashboardLayout>
        </HydrationBoundary>

        <ModalContainer />
      </QueryClientProvider>
    </>
  );
}
